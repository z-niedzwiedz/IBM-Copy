;STALE PROGRAMU
EOT	EQU	"$"
CR	EQU	13
SPACE	EQU	32
ESC	EQU	27
TAB	EQU	9
INV	EQU	"L"
NRM	EQU	"M"
DEOL	EQU	"K"
LF	EQU	10
BELL	EQU	7
CONOUT	EQU	2
LIST	EQU	5

;ZMIENNE PROGRAMU
CLSMSG	DEFB	ESC,"H",ESC,"J",EOT,0,0,0
INVMSG	DEFB	ESC,INV,EOT,0,0,0,0,0
NRMMSG	DEFB	ESC,NRM,ESC,"G",EOT,0,0,0
CLDMSG	DEFB	ESC,DEOL,LF,ESC,DEOL,EOT,0,0
CPMDRIVE	DEFS	1
DOSDRIVE	DEFS	1
DRIVE	DEFS	1
TRACK	DEFS	1
SECTOR	DEFS	1
MASK	DEFS	1
PRCOM	DEFB	CONOUT
PRON	DEFB	0
SPEED	DEFB	0
LOGSEC	DEFS	2
MEM	DEFS	2
NRREC	DEFS	2
TRACKS	DEFS	1
MAX	DEFS	2
MAXCL	DEFS	2
BYTCLU	DEFS	2
STATIC	DEFS	2
FREE	DEFS	2
RECPDR	DEFS	2
CLUSTER	DEFS	2
RAMTOP	DEFS	2
TOTAL	DEFS	2
FIL	DEFS	1
CZYCRLF	DEFS	1
CZY_S_B	DEFS	1

DEKODER	LD	HL,POCZATEK
	LD	BC,BUFOR-POCZATEK
	LD	A,(TRACKS)
	LD	R,A
DEKOD1	LD	A,R
	XOR	(HL)
	LD	(HL),A
	INC	HL
	DEC	BC
	LD	A,B
	OR	C
	JR	NZ,DEKOD1
POCZATEK	CALL	INIT
	LD	A,(4)
	LD	(DRIVE),A
	CALL	DRIVEON
	CALL	HOME
	CALL	STEPIN
	LD	A,222
	LD	(SECTOR),A
	LD	HL,#1200
	LD	(MEM),HL
	CALL	LDSEC
	AND	#1C
	JP	Z,START
	CALL	DRIVEOFF
	XOR	A
	LD	(DRIVE),A
	CALL	DRIVEON
	CALL	HOME
	CALL	STEPIN
	CALL	LDSEC
	AND	#1C
	JP	NZ,#F600
	JP	START

;PRINT	BPB
PRBPB	CALL	CLS
	LD	DE,BPBMSG
	CALL	PRDE
	CALL	PRINTER
	CALL	LDBPB
	CALL	PRCRLF
	CALL	PRLF
	LD	B,16
	CALL	BSPACE
	CALL	PRSTR
	DEFM	"name:$
	PUSH	IY
	POP	HL
	INC	HL
	INC	HL
	INC	HL
	LD	B,8
	CALL	PRCOUNT
	CALL	PRCRLF
	LD	B,8
	CALL	BSPACE
	CALL	PRSTR
	DEFM	"bytes/sector:$
	LD	E,(IY+11)
	LD	D,(IY+12)
	PUSH	DE
	CALL	PRHEXDE
	POP	HL
	CALL	PRDECHL
	CALL	PRSTR
	DEFB	CR,LF
	DEFM	"   sector(s)/cluster:$
	LD	E,(IY+13)
	LD	D,0
	PUSH	DE
	CALL	PRHEXDE
	POP	HL
	CALL	PRDECHL
	CALL	PRSTR
	DEFB	CR,LF
	DEFM	"  sector(s) reserved:$
	LD	E,(IY+14)
	LD	D,(IY+15)
	PUSH	DE
	CALL	PRHEXDE
	POP	HL
	CALL	PRDECHL
	CALL	PRCRLF
	LD	B,8
	CALL	BSPACE
	CALL	PRSTR
	DEFM	"FAT table(s):$
	LD	E,(IY+16)
	LD	D,0
	PUSH	DE
	CALL	PRHEXDE
	POP	HL
	CALL	PRDECHL
	CALL	PRSTR
	DEFB	CR,LF
	DEFM	"entries in directory:$
	LD	E,(IY+17)
	LD	D,(IY+18)
	PUSH	DE
	CALL	PRHEXDE
	POP	HL
	CALL	PRDECHL
	CALL	PRCRLF
	LD	B,8
	CALL	BSPACE
	CALL	PRSTR
	DEFM	"sectors/disk:$
	LD	E,(IY+19)
	LD	D,(IY+20)
	PUSH	DE
	CALL	PRHEXDE
	POP	HL
	CALL	PRDECHL
	CALL	PRCRLF
	LD	B,14
	CALL	BSPACE
	CALL	PRSTR
	DEFM	"format:$
	LD	E,(IY+21)
	LD	D,0
	PUSH	DE
	CALL	PRHEXDE
	POP	HL
	LD	D,0
	CALL	PRDECHL
	CALL	PRCRLF
	LD	B,7
	CALL	BSPACE
	CALL	PRSTR
	DEFM	"sector(s)/FAT:$
	LD	E,(IY+22)
	LD	D,(IY+23)
	PUSH	DE
	CALL	PRHEXDE
	POP	HL
	CALL	PRDECHL
	CALL	PRCRLF
	LD	B,7
	CALL	BSPACE
	CALL	PRSTR
	DEFM	"sectors/track:$
	LD	E,(IY+24)
	LD	D,(IY+25)
	PUSH	DE
	CALL	PRHEXDE
	POP	HL
	CALL	PRDECHL
	CALL	PRCRLF
	LD	B,13
	CALL	BSPACE
	CALL	PRSTR
	DEFM	"head(s):$
	LD	E,(IY+26)
	LD	D,(IY+27)
	PUSH	DE
	CALL	PRHEXDE
	POP	HL
	CALL	PRDECHL
	CALL	PRSTR
	DEFB	CR,LF
	DEFM	"    hidden sector(s):$
	LD	E,(IY+28)
	LD	D,(IY+29)
	PUSH	DE
	CALL	PRHEXDE
	POP	HL
	CALL	PRDECHL
	CALL	PRCRLF
	CALL	PRLF
	LD	B,13
	CALL	BSPACE
	CALL	PRSTR
	DEFM	"tracks:$
	BIT	2,(IY+21)
	JR	NZ,T40
	CALL	PRSTR
	DEFM	"80 (High Density)$
	JR	BPBEXIT
T40	CALL	PRSTR
	DEFM	"40 (Double Density)$
BPBEXIT	JP	COMPLET

;PROCEDURA LADUJE DO BUFORA 1-SZY SEKTOR NAPEDU (DOSDRIVE)
;I SPRAWDZA, CZY JEST TO SEKTOR DOS-U; JEZELI NIE A=0
LDBPB	CALL	CLFATDIR
	LD	A,(DOSDRIVE)
	LD	(DRIVE),A
	XOR	A
	LD	(TRACK),A
	INC	A
	LD	(SECTOR),A
	CALL	SIDEB
	CALL	DRIVEON
	CALL	HOME
	CALL	RDADDR
	LD	A,(BPB+1)
	LD	(CZY_S_B),A
	CALL	DRIVEOFF
	CALL	SIDEA
	CALL	DRIVEON
	CALL	RDADDR
	LD	A,(BPB+3)
	CP	2
	JP	NZ,NIEDOS
	LD	A,(BPB+1)
	CP	0
	JP	NZ,NIEDOS
	LD	HL,FAT
	LD	(MEM),HL
	CALL	LDSEC
	AND	#1C
	CALL	NZ,BADSEC
	CALL	DRIVEOFF
	LD	DE,BPB
	LD	HL,FAT
	LD	BC,30
	LDIR
	CALL	CLFATDIR
	LD	IY,BPB
	BIT	2,(IY+21)
	JR	NZ,LBT40
	LD	A,80
	JR	LDBPBEXIT
LBT40	LD	A,40
LDBPBEXIT	LD	(TRACKS),A
	LD	L,(IY+22)
	LD	H,(IY+23);SEC/FAT
	LD	A,(IY+16)
	CALL	MNOZ
	LD	E,(IY+14)
	LD	D,(IY+15);RESERVED
	ADD	HL,DE
	LD	A,(IY+17);SEC/DIR
	CALL	HIGHA
	LD	E,A
	LD	D,0
	ADD	HL,DE
	LD	(STATIC),HL
	LD	E,(IY+19)
	LD	D,(IY+20);SEC/DISK
	EX	DE,HL
	OR	A
	SBC	HL,DE
	LD	(MAX),HL
	LD	E,(IY+13)
	LD	D,0
	CALL	DIVHL
	PUSH	BC
	POP	HL
	LD	(MAXCL),HL
	LD	L,(IY+11)
	LD	H,(IY+12)
	LD	A,(IY+13)
	CALL	MNOZ
	LD	(BYTCLU),HL
	LD	A,(IX+21)
	BIT	0,A
	RET	Z
	LD	A,(CZY_S_B)
	OR	A
	RET	NZ
	CALL	PRSTR
	DEFB	CR,LF,BELL
	DEFM	"WARNING ! NO ACCESS TO SIDE B !!!
	DEFB	CR,LF,EOT
	CALL	GET
	RET

NIEDOS	CALL	CLDOWN
	CALL	PRINTXY
	DEFB	23,0,EOT
	CALL	PRINV
	CALL	PRSTR
	DEFM	" THIS IS NOT DOS DISK !!! PRESS ANY KEY... $
NIEDOS1	CALL	PRNRM
	CALL	GET
	JP	M0

NIECPM	CALL	CLDOWN
	CALL	PRINTXY
	DEFB	23,0,EOT
	CALL	PRINV
	CALL	PRSTR
	DEFM	" THIS IS NOT CP/M DISK !!! PRESS ANY KEY... $
	JR	NIEDOS1

;CHANGE	STEP
CHGSTP	CALL	CLDOWN
	LD	DE,CHSMSG
	CALL	PRDE
	CALL	PRINTXY
	DEFB	22,0
	DEFM	" (0=6ms 1=12ms 2=20ms 3=30ms) NOW STEP=$
	LD	A,(SPEED)
	ADD	A,"0"
	CALL	PRINT
	CALL	PRINTXY
	DEFB	23,23
	DEFM	"Type new value (0-3):$
	CALL	GET
	CP	"0"
	JP	C,M0
	CP	"3"+1
	JP	NC,M0
	SUB	"0"
	LD	(SPEED),A
	XOR	A
	LD	(DRIVE),A
	LD	A,39
	LD	(TRACK),A
	CALL	DRIVEON
	CALL	SEEK
	CALL	HOME
	CALL	DRIVEOFF
	JP	M0

;SAVE DOS SECTOR
SVDSEC	CALL	CLS
	LD	DE,SDSMSG
	CALL	PRDE
	CALL	NAMEDR
	LD	(DRIVE),A
	CALL	NUMTRA
	CALL	SIDEAB
	CALL	NUMSEC
	CALL	CLBUF
	CALL	DRIVEON
	CALL	HOME
	CALL	SEEK
	LD	HL,BUFOR
	LD	(MEM),HL
	LD	A,(TRACK)
	CP	1
	JR	NZ,SVDSEC1
	LD	A,(SECTOR)
	CP	222
	JR	NZ,SVDSEC1
	LD	A,#1C
	JP	NOSECTOR
SVDSEC1	CALL	LDSEC
	AND	#1C
	JP	NZ,NOSECTOR
	PUSH	HL
	CALL	DRIVEOFF
	CALL	PRSTR
	DEFB	CR,LF
	DEFM	"length:$
	POP	HL
	LD	DE,BUFOR
	OR	A
	SBC	HL,DE
	LD	(NRREC),HL
	CALL	PRDECHL
	CALL	NAMECPM
	CALL	SAVECPM
	JP	COMPLET

;LOAD DOS SECTOR
LDDSEC	CALL	CLS
	LD	DE,LDSMSG
	CALL	PRDE
	CALL	DCPM
	CALL	NAMECPM
	CALL	LOADCPM
	CALL	PRSTR
	DEFB	CR,LF
	DEFM	"length:$
	LD	HL,BUFOR
	LD	(MEM),HL
	LD	HL,(NRREC)
	CALL	PRDECHL
	CALL	NAMEDR
	LD	(DRIVE),A
	CALL	NUMTRA
	CALL	SIDEAB
	CALL	NUMSEC
	CALL	DRIVEON
	CALL	HOME
	BIT	6,A
	JP	NZ,PROTECT
	CALL	SEEK
	LD	HL,BUFOR
	LD	(MEM),HL
	CALL	SVSEC
	AND	#1C
	CALL	NZ,BADSEC
	CALL	DRIVEOFF
	JP	COMPLET

;SAVE TRACK
SVTCPM	CALL	CLS
	LD	DE,STMSG
	CALL	PRDE
	CALL	NAMEDR
	LD	(DRIVE),A
	CALL	NUMTRA
	CALL	SIDEAB
	CALL	CLBUF
	CALL	DRIVEON
	CALL	HOME
	CALL	SEEK
	BIT	4,A
	JP	NZ,NOTRACK
	CALL	RDTRK
	PUSH	HL
	CALL	DRIVEOFF
	CALL	PRSTR
	DEFB	CR,LF
	DEFM	"length:$
	POP	HL
	LD	DE,BUFOR
	OR	A
	SBC	HL,DE
	LD	(NRREC),HL
	CALL	PRDECHL
	CALL	NAMECPM
	CALL	SAVECPM
	JP	COMPLET

;LOAD TRACK
LDTCPM	CALL	CLS
	LD	DE,LTMSG
	CALL	PRDE
	CALL	DCPM
	CALL	NAMECPM
	CALL	LOADCPM
	CALL	PRSTR
	DEFB	CR,LF
	DEFM	"length:$
	LD	HL,BUFOR
	LD	(MEM),HL
	LD	HL,(NRREC)
	CALL	PRDECHL
	CALL	NAMEDR
	LD	(DRIVE),A
	CALL	NUMTRA
	CALL	SIDEAB
	CALL	DRIVEON
	CALL	HOME
	BIT	6,A
	JP	NZ,PROTECT
	CALL	SEEK
	CALL	WRTRK
	CALL	DRIVEOFF
	JP	COMPLET

;WCZYTANIE STRONY
SIDEAB	CALL	PRSTR
	DEFB	CR,LF,LF
	DEFM	"Side (A/B):$
	CALL	GET
	RES	5,A
	CP	"B"
	JR	Z,SIDEAB1
	LD	A,"A"
	CALL	PRINT
	JP	SIDEA
SIDEAB1	LD	A,"B"
	CALL	PRINT
	JP	SIDEB

;WCZYTANIE NUMERU SEKTORA
NUMSEC	CALL	PRSTR
	DEFB	CR,LF,LF
	DEFM	"Sector:$
	LD	A,3
	CALL	INPUT
	CALL	LICZBA
	LD	A,C
	LD	(SECTOR),A
	CALL	PRSTR
	DEFB	CR
	DEFM	"Sector:$
	LD	A,(SECTOR)
NUMSEC1	LD	L,A
	LD	H,0
	LD	D,0
	CALL	PRDECL
	LD	B,10
	CALL	BSPACE
	RET

;WCZYTANIE NUMERU SCIEZKI
NUMTRA	CALL	PRSTR
	DEFB	CR,LF,LF
	DEFM	"Track:$
	LD	A,3
	CALL	INPUT
	CALL	LICZBA
	LD	A,C
	LD	(TRACK),A
	CALL	PRSTR
	DEFB	CR
	DEFM	"Track:$
	LD	A,(TRACK)
	JR	NUMSEC1

;WCZYTANIE NAZWY NAPEDU
NAMEDR	CALL	PRSTR
	DEFB	CR,LF,LF
	DEFM	"Type drive name (A-D) $
NAMEDR1	CALL	GET
	RES	5,A
	PUSH	AF
	CALL	PRINT
	POP	AF
	CP	"A"
	JP	C,M0
	CP	"D"+1
	JP	NC,M0
	SUB	"A"
	RET

DESTIN	CALL	PRSTR
	DEFB	CR,LF,LF
	DEFM	"Type destination drive name:$
	CALL	NAMEDR1
	LD	(DRIVE),A
	INC	A
	LD	(FCB),A
	CALL	DRIVEON
	CALL	HOME
	CALL	DRIVEOFF
	RET

NAMEDOS	CALL	LDBPB
	CALL	LOADFAT
	CALL	LDDIR
	CALL	PRSTR
	DEFB	CR,LF,LF
	DEFM	"DOS file name: $
	LD	A,(DOSDRIVE)
	ADD	A,"A"
	CALL	PRINT
	LD	A,":"
	CALL	PRINT
	LD	A,13
	CALL	INPUT
NDOSF1	OR	A
	RET	Z
	CALL	NAME
	CALL	FINDFILE
	LD	A,0
	JR	NZ,NDOSF1
	CALL	PRSTR
	DEFB	CR
	DEFM	"   DOS file name:$
	CALL	PRFILE
	SCF
	RET

;WCZYTANIE NAZWY PLIKU CP/M
NAMECPM	CALL	PRSTR
	DEFB	CR,LF,LF
	DEFM	"CP/M file name: $
	LD	A,(CPMDRIVE)
	ADD	A,"A"
	CALL	PRINT
	LD	A,":"
	CALL	PRINT
	LD	A,13
	CALL	INPUT
	OR	A
	JR	Z,ABORT
	CALL	NAME
	CALL	PRCFILE
	RET

ABORT	CALL	PROFF
	CALL	PRSTR
	DEFB	CR,LF,LF
	DEFM	"FUNCTION ABORTED...$
	CALL	DRIVEOFF
	JP	ANYKEY

;PARAMETRY DPB TOS-U,ITD.
PARAM	DEFB	1,6,11,16,5,10,15,4,9,14,3,8,13,2,7,12;PRZEPLOT 5 (-107)
	DEFB	1,8,15,6,13,4,11,2,9,16,7,14,5,12,3,10;PRZEPLOT 7 (-91)
	DEFB	32,0,3,7,0,143,0,127,0,240,0,32,0,4,0;DPB TOS V A.2 (-75)
	DEFB	32,0,3,7,0,167,0,127,0,240,0,32,0,0,0;DPB TOS V A.4 (-60)
	DEFB	32,0,3,7,0,151,0,63,0,240,0,16,0,2,0;DPB CP/M TIMEX (-45)
	DEFB	32,0,3,7,0,151,0,63,0,192,0,16,0,2,0;DPB CP/M POLBRIT (-30)
	DEFB	32,0,4,15,1,155,0,127,0,240,0,32,0,2,0;DPB CP/M 80 TRACKS (-15)

SET5XLT	LD	HL,-107
SETXLT1	LD	(IY),L
	LD	(IY+1),H
	RET
SET7XLT	LD	HL,-91
	JR	SETXLT1

;SET TOS DPB
STTOS	CALL	CLS
	LD	DE,SDPBMSG
	CALL	PRDE
	CALL	RDS
	LD	DE,-107
	LD	HL,PARAM
	LD	BC,107
	LDIR
	CALL	PRSTR
	DEFB	CR,LF,LF
	DEFM	"DRIVE $
	LD	A,(CPMDRIVE)
	ADD	A,"A"
	CALL	PRINT
	CALL	PRSTR
	DEFM	":  DPH = $
	LD	A,(CPMDRIVE)
	LD	C,A
	LD	DE,8
	CALL	BIOS1
	PUSH	HL
	POP	IY
	CALL	PRDECHL
	LD	A,"="
	CALL	PRINT
	PUSH	IY
	POP	DE
	CALL	PRHEXDE
	CALL	PRSTR
	DEFB	CR,LF,LF
	DEFM	"OPTIONS:
	DEFB	CR,LF,LF
	DEFM	"0 - CP/M 40 TRACKS, TIMEX
	DEFB	CR,LF,LF
	DEFM	"1 - CP/M 40 TRACKS, POLBRIT
	DEFB	CR,LF,LF
	DEFM	"2 - TOS V A.2
	DEFB	CR,LF,LF
	DEFM	"4 - TOS V A.4
	DEFB	CR,LF,LF
	DEFM	"8 - CP/M 80 TRACKS/1 SIDE
	DEFB	CR,LF,LF
	DEFM	"OTHER KEY - EXIT.$
	CALL	GET
	CP	"0"
	JR	NZ,SDPB1
	CALL	SET5XLT
	LD	HL,-45
	JR	SETDPB1
SDPB1	CP	"1"
	JR	NZ,SDPB2
	CALL	SET5XLT
	LD	HL,-30
	JR	SETDPB1
SDPB2	CP	"2"
	JR	NZ,SDPB3
	CALL	SET7XLT
	LD	HL,-75
	JR	SETDPB1
SDPB3	CP	"4"
	JR	NZ,SDPB4
	CALL	SET7XLT
	LD	HL,-60
	JR	SETDPB1
SDPB4	CP	"8"
	JR	NZ,SDPBEX
	CALL	SET5XLT
	LD	HL,-15
	JR	SETDPB1
SDPBEX	JP	M0

SETDPB1	LD	(IY+10),L
	LD	(IY+11),H

;CP/M STATUS INFO
CPMINFO	CALL	CLS
	LD	DE,PDPBMSG
	CALL	PRDE
	CALL	PRINTER
	CALL	RDS
	CALL	PRSTR
	DEFB	CR,LF,LF
	DEFM	"- Logged - ---- Records ---- - Tracks - --- Capacity --- TPA-"
	DEFB	CR,LF
	DEFM	"Drv User Block Track Drive Sys. Drive Directory Drive Bytes
	DEFB	CR,LF,EOT
	LD	C,25;CurDisk
	CALL	BDOS1
	ADD	A,"A"
	CALL	PRINT
	LD	A,":"
	CALL	PRINT
	CALL	PRSPC
	CALL	PRSPC
	LD	DE,#FFFF
	LD	C,32;GetUser
	CALL	5
	LD	L,A
	LD	H,0
	LD	D,0
	CALL	PRDECL1
	LD	B,3
	CALL	BSPACE
	LD	C,31;DiskParam
	CALL	5
	PUSH	HL
	POP	IY
	LD	L,(IY+3);BLM
	INC	L
	LD	D,0
	LD	H,0
	CALL	PRDECL1;RecsPrBlock
	CALL	PRSPC
	LD	L,(IY);SPT
	LD	H,(IY+1)
	CALL	PRDECHL
	LD	B,2
	CALL	BSPACE
	LD	L,(IY+5);DSM
	LD	H,(IY+6)
	INC	HL
	LD	A,(IY+3);BLM
	INC	A
	CALL	MNOZ
	LD	(RECPDR),HL;RecsPrDrive
	CALL	PRDECHL
	LD	L,(IY+13);OFF0
	LD	D,0
	LD	H,0
	CALL	PRDECL1
	LD	HL,(RECPDR)
	LD	D,(IY+1);SPT
	LD	E,(IY)
	CALL	DIVHL
	LD	A,H
	OR	L
	JR	Z,CI31
	INC	BC
CI31	PUSH	BC
	POP	DE
	LD	L,(IY+13);OFF
	LD	H,(IY+14)
	ADD	HL,DE
	CALL	PRDECHL;TrksPrDrive
	CALL	PRSPC
	LD	L,(IY+7);DRM
	LD	H,(IY+8)
	INC	HL
	CALL	PRDECHL
	LD	A,"/"
	CALL	PRINT
	LD	L,(IY+11);CKS
	LD	H,(IY+12)
	LD	A,4
	CALL	MNOZ
	CALL	PRDECL
	CALL	PRSPC
	LD	HL,(RECPDR)
	SRA	H
	RR	L
	SRA	H
	RR	L
	SRA	H
	RR	L
	CALL	PRDECHL;capacity
	LD	A,"K"
	CALL	PRINT
	CALL	PRSPC
	LD	HL,(6)
	LD	DE,#100
	OR	A
	SBC	HL,DE
	CALL	PRDECHL
	CALL	PRCRLFLF
	CALL	PRSTR
	DEFM	"- Operating System -"
	DEFB	CR,LF
	DEFM	" Version  BDOS  BIOS  LOG-IN VECTOR  ALLOC ADDRESS  R/O VECTOR
	DEFB	CR,LF,EOT
	LD	C,12
	CALL	5
	PUSH	HL
	LD	A,H
	CP	0
	JR	NZ,CI11
	CALL	PRSTR
	DEFM	"CP/M $
	JR	CI1EX
CI11	CP	1
	JR	NZ,CI12
	CALL	PRSTR
	DEFM	"MP/M $
	JR	CI1EX
CI12	CALL	PRSTR
	DEFM	"???? $
CI1EX	POP	HL
	PUSH	HL
	LD	A,L
	CP	0
	JR	NZ,CI21
	CALL	PRSTR
	DEFM	"1.x$
	POP	HL
	JR	CI2EX
CI21	RRCA
	RRCA
	RRCA
	RRCA
	AND	#F
	ADD	A,"0"
	CALL	PRINT
	LD	A,"."
	CALL	PRINT
	POP	HL
	LD	A,L
	AND	#F
	ADD	A,"0"
	CALL	PRINT
CI2EX	CALL	PRSPC
	LD	HL,(6)
	EX	DE,HL
	CALL	PRHEXDE
	LD	HL,(1)
	DEC	HL
	DEC	HL
	DEC	HL
	EX	DE,HL
	CALL	PRHEXDE
	LD	C,24;LOG-IN
	CALL	5
	EX	DE,HL
	CALL	PRHEXDE
	LD	B,9
	CALL	BSPACE
	LD	C,27;ALLOC
	CALL	5
	EX	DE,HL
	CALL	PRHEXDE
	LD	B,9
	CALL	BSPACE
	LD	C,29;R/O
	CALL	5
	EX	DE,HL
	CALL	PRHEXDE
	CALL	PRSTR
	DEFB	CR,LF
	DEFM	"DPB = $
	PUSH	IY
	POP	HL
	PUSH	HL
	CALL	PRDECHL
	LD	A,"="
	CALL	PRINT
	POP	DE
	CALL	PRHEXDE
	LD	B,3
	CALL	BSPACE
	CALL	PRSTR
	DEFM	"DPH=$
	LD	A,(CPMDRIVE)
	LD	C,A
	LD	DE,8
	CALL	BIOS1
	PUSH	HL
	CALL	PRDECHL
	LD	A,"="
	CALL	PRINT
	POP	HL
	PUSH	HL
	EX	DE,HL
	CALL	PRHEXDE
	LD	B,4
	CALL	BSPACE
	CALL	PRSTR
	DEFM	"XLT=$
	POP	HL
	LD	E,(HL)
	INC	HL
	LD	D,(HL)
	PUSH	DE
	EX	DE,HL
	CALL	PRDECHL
	LD	A,"="
	CALL	PRINT
	POP	DE
	CALL	PRHEXDE
	CALL	PRSTR
	DEFB	CR,LF
	DEFM	"SPT = $
	LD	L,(IY)
	LD	H,(IY+1)
	CALL	PRDECHL
	CALL	PRSTR
	DEFB	CR,LF
	DEFM	"BSH = $
	LD	L,(IY+2)
	LD	D,0
	LD	H,0
	CALL	PRDECHL
	CALL	PRSTR
	DEFB	CR,LF
	DEFM	"BLM = $
	LD	L,(IY+3)
	LD	D,0
	LD	H,0
	CALL	PRDECHL
	CALL	PRSTR
	DEFB	CR,LF
	DEFM	"EXM = $
	LD	L,(IY+4)
	LD	D,0
	LD	H,0
	CALL	PRDECHL
	CALL	PRSTR
	DEFB	CR,LF
	DEFM	"DSM0= $
	LD	L,(IY+5)
	LD	D,0
	LD	H,0
	CALL	PRDECHL
	CALL	PRSTR
	DEFB	CR,LF
	DEFM	"DSM1= $
	LD	L,(IY+6)
	LD	D,0
	LD	H,0
	CALL	PRDECHL
	CALL	PRSTR
	DEFB	CR,LF
	DEFM	"DRM = $
	LD	L,(IY+7)
	LD	H,(IY+8)
	CALL	PRDECHL
	CALL	PRSTR
	DEFB	CR,LF
	DEFM	"AL0 = $
	LD	L,(IY+9)
	LD	D,0
	LD	H,0
	CALL	PRDECHL
	CALL	PRSTR
	DEFB	CR,LF
	DEFM	"AL1 = $
	LD	L,(IY+10)
	LD	D,0
	LD	H,0
	CALL	PRDECHL
	CALL	PRSTR
	DEFB	CR,LF
	DEFM	"CKS = $
	LD	L,(IY+11)
	LD	H,(IY+12)
	CALL	PRDECHL
	CALL	PRSTR
	DEFB	CR,LF
	DEFM	"OFF = $
	LD	L,(IY+13)
	LD	H,(IY+14)
	CALL	PRDECHL
	JP	COMPLET

;CHANGE DOS DRIVE
CHGDOS	CALL	CLDOWN
	LD	DE,CHDMSG
	CALL	PRDE
	CALL	PRSTR
	DEFM	"    Type drive name (A-D) $
	CALL	GET
	RES	5,A
	CP	"A"
	JP	C,M0
	CP	"D"+1
	JP	NC,M0
	SUB	"A"
	LD	(DRIVE),A
	CALL	DRIVEON
	CALL	HOME
	CALL	DRIVEOFF
	LD	A,(DRIVE)
	LD	(DOSDRIVE),A
	JP	M0

;CHANGE CP/M DRIVE
CHGCPM	CALL	CLDOWN
	LD	DE,CHCMSG
	CALL	PRDE
	CALL	PRSTR
	DEFM	"    Type drive name (A-D) $
	CALL	GET
	RES	5,A
	CP	"A"
	JP	C,M0
	CP	"D"+1
	JP	NC,M0
	SUB	"A"
	LD	(DRIVE),A
	CALL	DRIVEON
	CALL	HOME
	CALL	DRIVEOFF
	LD	A,(DRIVE)
	LD	(CPMDRIVE),A
	JP	M0

DDIR	CALL	PRCRLFLF
	CALL	LDBPB
	CALL	LDDIR
	LD	IX,DIR
DDIR1	LD	A,#E5
	CP	(IX)
	JR	Z,DDIREX
	XOR	A
	CP	(IX)
	JR	Z,DDIREX
	LD	A,(IX+11);ATRYBUT
	BIT	3,A
	JR	NZ,DDIREX
	CALL	PRDDIR
DDIREX	CALL	DIREND
	RET	Z
	JR	DDIR1

;DIR DOS DRIVE
DIRDOS	CALL	CLS
	LD	DE,DIRDMSG
	CALL	PRDE
	CALL	LDBPB
	CALL	LOADFAT
	CALL	LDDIR
	CALL	CLS
	CALL	PRINTER
	LD	IX,DIR;TERAZ	DIR
LAB	BIT	3,(IX+11);SZUKANIE ETYKIETY DYSKU
	JR	Z,LABEX
	CALL	PRSTR
	DEFM	"DISK LABEL: $
	PUSH	IX
	POP	HL
	LD	B,11
	CALL	PRCOUNT
	CALL	PRCRLF
	CALL	PRLF
	LD	(IX),#E5
LABEX	CALL	DIREND
	JR	NZ,LAB
;A TERAZ PLIKI
	CALL	PRSTR
	DEFM	"filename.ext  length     time      date
	DEFM	"   first attr.
	DEFB	CR,LF,EOT
	LD	IX,DIR
FILES	LD	A,#E5
	CP	(IX)
	JP	Z,FILESEX
	XOR	A
	CP	(IX)
	JP	Z,FILESEX
	CALL	PRFILE
	LD	E,(IX+22)
	LD	D,(IX+23)
	CALL	PRSPC
	CALL	PRTIME
	LD	E,(IX+24)
	LD	D,(IX+25)
	CALL	PRDATE
	LD	E,(IX+26)
	LD	D,(IX+27)
	CALL	PRHEXDE1;PIERWSZA POZYCJA FAT
	LD	A,(IX+11)
	RRA
	JR	NC,HID
	CALL	PRSTR
	DEFM	"R/O $
HID	RRA
	JR	NC,SYS
	CALL	PRSTR
	DEFM	"HID $
SYS	RRA
	JR	NC,SUB
	CALL	PRSTR
	DEFM	"SYS $
SUB	RRA;LABEL
	RRA
	JR	NC,ARCH
	CALL	PRSTR
	DEFM	"DIR $
ARCH	RRA
	JR	NC,ATREX
	CALL	PRSTR
	DEFM	"ARC$
ATREX	CALL	PRESSESC
	CALL	PRCRLF
FILESEX	CALL	DIREND
	JP	NZ,FILES
FREEDOS	CALL	PRSTR
	DEFB	CR,LF
	DEFM	"MAX:$
	LD	HL,(MAXCL)
	CALL	PRDECHL
	CALL	PRSTR
	DEFM	" clusters, FREE:$
	CALL	CHKFREE
	LD	HL,(FREE)
	CALL	PRDECHL
	CALL	PRSTR
	DEFM	" clusters, USED:$
	LD	HL,(FREE)
	EX	DE,HL
	LD	HL,(MAXCL)
	OR	A
	SBC	HL,DE
	CALL	PRDECHL
	CALL	PRSTR
	DEFM	" clusters"
	DEFB	CR,LF
	DEFM	"(cluster=$
	LD	HL,(BYTCLU)
	CALL	PRDECHL
	CALL	PRSTR
	DEFM	" bytes)$
ANYKEY	CALL	PROFF
	CALL	PRSTR
	DEFB	CR,LF,BELL
	DEFM	" PRESS ANY KEY ...$
	CALL	GET
	JP	M0

PRCFILE	CALL	PRSTR
	DEFB	CR
	DEFM	"   CP/M file name:$
	LD	HL,FCB+1
PRF1	LD	B,8
	CALL	PRCOUNT
	LD	A,"."
	CALL	PRINT
	LD	B,3
	CALL	PRCOUNT
	RET

PRFILE	PUSH	IX
	POP	HL
	CALL	PRF1
	PUSH	IX
	POP	HL
	LD	DE,28
	ADD	HL,DE;POCZ DLUGOSCI
	CALL	PRDECX
	RET

;DIR CP/M DRIVE
DIRCPM	CALL	RDS
	CALL	CLS
	LD	DE,DIRCMSG
	CALL	PRDE
	LD	C,31;DPB
	CALL	5
	PUSH	HL
	POP	IY
	CALL	PRINTER
	CALL	PRCRLFLF
	XOR	A
	LD	(CZYCRLF),A
	LD	(FIL),A
	LD	(TOTAL),A
	LD	(TOTAL+1),A
	CALL	RDS
	LD	DE,DIR
	CALL	SETDMA
	CALL	SFIRST
	INC	A
	JP	Z,NOFILE
	JR	DCPM1
DCPM0	CALL	SNEXT
	INC	A
	JP	Z,DCPM2
DCPM1	DEC	A
	LD	HL,DIR
	LD	DE,32
	CALL	MNOZHL
	PUSH	HL
	POP	IX
	LD	A,(IX+15)
	CP	#80
	JR	Z,DCPM0
	LD	A,(FIL)
	INC	A
	LD	(FIL),A
	LD	A,(CPMDRIVE)
	ADD	A,"A"
	CALL	PRINT
	LD	A,":"
	CALL	PRINT
	INC	HL
	LD	B,8
	CALL	PRCOUNT
	LD	A,"."
	CALL	PRINT
	LD	B,3
	CALL	PRCOUNT
	CALL	PRSPC
	BIT	7,(IX+9)
	JR	Z,DC01
	LD	A,"P"
	JR	DC02
DC01	LD	A,"u"
DC02	CALL	PRINT
	BIT	7,(IX+10)
	JR	Z,DC03
	LD	A,"I"
	JR	DC04
DC03	LD	A,"v"
DC04	CALL	PRINT
	BIT	7,(IX+11)
	JR	Z,DC05
	LD	A,"O"
	JR	DC06
DC05	LD	A,"c"
DC06	CALL	PRINT
	CALL	PRSPC

;DLUGOSC=WEJSCIE*16*(2^EXM)+DL
;WYNIK:=IL.REK/(2^BSH)
;IF RESZTA<>0 INC WYNIK
;DL=WYNIK*2^(BSH-3)
	LD	B,(IY+2);BSH
	LD	A,(IX+15);IL.REK.
	LD	C,0
DCP1	SRL	A
	JR	NC,DC2
	INC	C
DC2	DJNZ	DCP1
	LD	L,A
	LD	A,C
	OR	A;CZY BYLA RESZTA
	JR	Z,DC3
	INC	L
DC3	LD	H,0
	LD	A,(IY+2);BSH
	SUB	3
	JR	Z,DC5
	LD	B,A
DC4	SLA	L
	DJNZ	DC4
DC5	PUSH	HL
	LD	HL,16
	LD	A,(IY+4);EXM
	OR	A
	JR	Z,DC60
	LD	B,A
DC6	ADD	HL,HL
	DJNZ	DC6
DC60	EX	DE,HL
	LD	HL,0
	LD	A,(IX+12);NUMER WEJSCIA
	OR	A
	JR	Z,DC7
	LD	B,A
DC61	ADD	HL,DE
	DJNZ	DC61
DC7	POP	DE
	ADD	HL,DE
D02	EX	DE,HL
	LD	HL,(TOTAL)
	ADD	HL,DE
	LD	(TOTAL),HL
	EX	DE,HL
	CALL	PRDECHL
	LD	A,"K"
	CALL	PRINT
	LD	B,5
	CALL	BSPACE
	LD	A,(CZYCRLF)
	CPL
	LD	(CZYCRLF),A
	BIT	0,A
	CALL	Z,PRCRLF
	JP	DCPM0
DCPM2	LD	C,27;ALLOC
	CALL	5
	EX	DE,HL
	LD	L,(IY+5)
	LD	H,(IY+6)
	INC	HL
	LD	BC,0
DIRC01	PUSH	DE
	LD	A,(DE)
	LD	E,8
DIRC02	RLA
	JR	C,DIRC03
	INC	BC
DIRC03	LD	D,A
	DEC	HL
	LD	A,L
	OR	H
	JR	Z,DIRC04
	LD	A,D
	DEC	E
	JR	NZ,DIRC02
	POP	DE
	INC	DE
	JR	DIRC01
DIRC04	LD	L,C
	LD	H,B
	LD	A,(IY+2)
	SUB	3
	JR	Z,DIRC06
DIRC05	ADD	HL,HL
	DEC	A
	JR	NZ,DIRC05
DIRC06	PUSH	HL
	CALL	PRSTR
	DEFB	CR,LF,LF
	DEFM	"TOTAL OF $
	LD	HL,(TOTAL)
	CALL	PRDECHL
	CALL	PRSTR
	DEFM	"K IN $
	LD	A,(FIL)
	LD	L,A
	LD	H,0
	CALL	PRDECHL
	CALL	PRSTR
	DEFM	" FILES, FREE:$
	POP	HL
	CALL	PRDECHL
	LD	A,"K"
	CALL	PRINT
	JP	ANYKEY

DCPM	CALL	PRCRLFLF
	CALL	RDS
	LD	DE,DIR
	CALL	SETDMA
	CALL	SFIRST
	CP	#FF
	JP	Z,NOFILE
	JR	DC1
DC0	CALL	SNEXT
	CP	#FF
	RET	Z
DC1	LD	HL,DIR
	LD	DE,32
	CALL	MNOZHL
	PUSH	HL
	POP	IX
	LD	A,(IX+12)
	OR	A
	JR	NZ,DC0
	CALL	PRDIR
	JR	DC0

PRDIR	LD	A,(CPMDRIVE)
	ADD	A,"A"
	CALL	PRINT
	LD	A,":"
	CALL	PRINT
	INC	HL
PRDIR1	LD	B,8
	CALL	PRCOUNT
	LD	A,"."
	CALL	PRINT
	LD	B,3
	CALL	PRCOUNT
	LD	B,2
	JP	BSPACE

PRDDIR	LD	A,(DOSDRIVE)
	ADD	A,"A"
	CALL	PRINT
	LD	A,":"
	CALL	PRINT
	PUSH	IX
	POP	HL
	JR	PRDIR1

;TYPE DOS FILE
TYPEDOS	CALL	CLS
	LD	DE,TDMSG
	CALL	PRDE
	CALL	DDIR
	CALL	CLBUF
	CALL	NAMEDOS
	JP	NC,NOFILE
	CALL	LDDOSF
	JR	TCF0

;TYPE CP/M FILE
TYPECPM	CALL	CLS
	LD	DE,TCMSG
	CALL	PRDE
	CALL	DCPM
	CALL	CLBUF
	CALL	NAMECPM
	CALL	LOADCPM
TCF0	CALL	PRINTER
	LD	HL,(NRREC)
	PUSH	HL
	CALL	PRDECHL
	CALL	PRSTR
	DEFM	" bytes loaded$
	CALL	PRCRLF
	POP	BC
	LD	HL,BUFOR
TCF1	LD	A,B
	OR	C
	JP	Z,COMPLET
	LD	A,(HL)
	CP	#1A
	JR	Z,TCF2
	PUSH	HL
	PUSH	BC
	CALL	Z,PRCRLF
	CALL	PRINT
	CALL	PRESSESC
	POP	BC
	POP	HL
TCF3	INC	HL
	DEC	BC
	JR	TCF1

TCF2	LD	A,BELL
	CALL	PRINT
	CALL	GET
	CP	CR
	JP	NZ,COMPLET
	JR	TCF3

;ERASE DOS FILE
ERADOS	CALL	CLS
	LD	DE,EDMSG
	CALL	PRDE
	CALL	DDIR
	CALL	NAMEDOS
	JR	NC,ERADMENU
	CALL	ERADF
	JP	COMPLET

ERADF	LD	(IX),#E5
	LD	L,(IX+26)
	LD	H,(IX+27);PIERWSZY KLASTER PLIKU
ERADF1	LD	(CLUSTER),HL
	CALL	LDFAT
	LD	A,H
	CP	#F
	JR	Z,EDFEND
ERADF2	PUSH	HL
	LD	HL,(CLUSTER)
	LD	BC,0
	CALL	SVFAT
	POP	HL
	JR	ERADF1
EDFEND	LD	A,L
	CP	#F8
	JR	NC,EDFEX
	CP	#F1
	JP	NC,BADFAT
	JR	ERADF2
EDFEX	LD	HL,(CLUSTER)
	LD	BC,0
	CALL	SVFAT
	CALL	SVDIR
	JP	SAVEFAT
	RET

ERADMENU	CALL	CLS
	LD	DE,EDMSG
	CALL	PRDE
	CALL	PRSTR
	DEFB	CR,LF,LF
	DEFM	"SPACE=skip ENTER=ERASE file ESCAPE=exit$
	LD	IX,DIR
EDM1	LD	A,(IX)
	CP	#E5
	JR	Z,EDMEX
	CP	0
	JR	Z,EDMEX
	BIT	3,(IX+11)
	JR	NZ,EDMEX
	CALL	PRCRLF
	CALL	PRFILE
EDM2	CALL	GET
	CP	ESC
	JP	Z,M0
	CP	SPACE
	JR	Z,EDMEX
	CP	CR
	JR	Z,EDM3
	LD	A,BELL
	CALL	PRINT
	JR	EDM2
EDM3	CALL	PRSTR
	DEFM	" OK - ERASING !$
	CALL	ERADF
EDMEX	CALL	DIREND
	JR	NZ,EDM1
	JP	COMPLET

;ERASE CP/M FILE
ERACPM	CALL	CLS
	LD	DE,ECMSG
	CALL	PRDE
	CALL	DCPM
	CALL	NAMECPM
	CALL	DELETE
	INC	A
	JP	Z,NOFILE
	JP	COMPLET

;RENAME DOS FILE
RENDOS	CALL	CLS
	LD	DE,RDMSG
	CALL	PRDE
	CALL	DDIR
	CALL	NAMEDOS
	JP	NC,NOFILE
	CALL	PRSTR
	DEFB	CR,LF,LF
	DEFM	"new file name:$
	LD	A,13
	CALL	INPUT
	CALL	NAME
	PUSH	IX
	POP	DE
	LD	HL,FCB+1
	LD	BC,11
	LDIR
	CALL	SVDIR
	JP	COMPLET

;RENAME CP/M FILE
RENCPM	CALL	CLS
	LD	DE,RCMSG
	CALL	PRDE
	CALL	DCPM
	CALL	NAMECPM
	LD	DE,BUFOR
	LD	HL,FCB
	LD	BC,16
	LDIR
	CALL	PRSTR
	DEFB	CR,LF
	DEFM	"new name:$
	LD	A,13
	CALL	INPUT
	CALL	NAME
	LD	DE,BUFOR+16
	LD	HL,FCB
	LD	BC,16
	LDIR
	CALL	RENAME
	JP	COMPLET

;FORMAT DOS DISK
FORDOS	CALL	CLS
	LD	DE,FDMSG
	CALL	PRDE
	CALL	PRSTR
	DEFB	CR,LF,LF
	DEFM	"FORMAT DISK IN DRIVE $
	LD	A,(DOSDRIVE)
	ADD	A,"A"
	CALL	PRINT
	CALL	PRSTR
	DEFM	" ? PRESS:
	DEFB	CR,LF,LF
	DEFM	"4 - 42 TRACKS; 8 - 82 TRACKS; OTHER KEY - EXIT $
	CALL	GET
	PUSH	AF
	CP	"4"
	JR	NZ,FORD1
	LD	A,41
	LD	(TRACKS),A
	JR	FORD2
FORD1	CP	"8"
	JP	NZ,M0
	LD	A,81
	LD	(TRACKS),A
FORD2	POP	AF
	CALL	PRINT
	CALL	PRLF
	CALL	PRLF
	LD	A,(DOSDRIVE)
	LD	(DRIVE),A
	XOR	A
	LD	(TRACK),A
	CALL	SIDEA
	CALL	DOSTRK
	CALL	DRIVEON
	CALL	HOME
	BIT	6,A
	JP	NZ,PROTECT
FD1	CALL	PRSTR
	DEFB	CR
	DEFM	"Format track:$
	LD	HL,BUFOR+75+1
	LD	L,(HL)
	LD	H,0
	LD	D,0
	CALL	PRDECL1
	CALL	WRTRK
	CALL	VERDTRK
	LD	A,(TRACK)
	LD	HL,TRACKS
	CP	(HL)
	JR	Z,FD1EX
	CALL	PRESSESC
	CALL	STEPIN
	LD	HL,TRACK
	INC	(HL)
	CALL	NEXTDTRK
	JR	FD1
FD1EX	CALL	PRSTR
	DEFB	CR,LF,LF
	DEFM	"FORMAT SIDE B ? (Y/N) $
FDEX	CALL	DRIVEOFF
	CALL	SIDEA
	CALL	DRIVEON
	CALL	HOME
	CALL	CLBUF
	LD	A,(TRACKS)
	CP	41
	JP	NZ,FDEX80
	LD	HL,BPBFC
	LD	DE,BUFOR
	LD	BC,30
	LDIR
	XOR	A
	LD	(TRACK),A
	LD	A,1
	CALL	SVASEC
	CALL	CLBUF
	LD	HL,BUFOR
	LD	A,#FC
	LD	(HL),A
	INC	HL
	LD	A,#FF
	LD	(HL),A
	INC	HL
	LD	(HL),A
	LD	A,2
	CALL	SVASEC
	LD	A,4
	CALL	SVASEC
	CALL	CLBUF
	LD	A,3
	CALL	SVASEC
	LD	A,5
	CALL	SVASEC
	LD	A,6
	CALL	SVASEC
	LD	A,7
	CALL	SVASEC
	LD	A,8
	CALL	SVASEC
	LD	A,9
	CALL	SVASEC
	CALL	DRIVEOFF
	JP	FD0EX

FDEX80	LD	HL,BPBF8
	LD	DE,BUFOR
	LD	BC,30
	LDIR
	XOR	A
	LD	(TRACK),A
	LD	A,1
	CALL	SVASEC
	CALL	CLBUF
	LD	HL,BUFOR
	LD	A,#F8
	LD	(HL),A
	INC	HL
	LD	A,#FF
	LD	(HL),A
	INC	HL
	LD	(HL),A
	LD	A,2
	CALL	SVASEC
	LD	A,4
	CALL	SVASEC
	CALL	CLBUF
	LD	A,3
	CALL	SVASEC
	LD	A,5
	CALL	SVASEC
	LD	A,6
	CALL	SVASEC
	LD	A,7
	CALL	SVASEC
	LD	A,8
	CALL	SVASEC
	LD	A,9
	CALL	SVASEC
	CALL	STEPIN
	LD	A,1
	CALL	SVASEC
	LD	A,2
	CALL	SVASEC
	LD	A,3
	CALL	SVASEC
	CALL	DRIVEOFF

FD0EX	CALL	GET
	RES	5,A
	PUSH	AF
	CALL	PRINT
	POP	AF
	CP	"Y"
	JP	NZ,COMPLET
	CALL	DRIVEOFF
	CALL	DOSTRK
	CALL	SIDEBTRK
	CALL	SIDEB
	CALL	DRIVEON
	XOR	A
	LD	(TRACK),A
	CALL	HOME
	BIT	6,A
	JP	NZ,PROTECT
	CALL	PRLF
	CALL	PRLF
FD2	CALL	PRSTR
	DEFB	CR
	DEFM	"Format track:$
	LD	HL,BUFOR+75+1
	LD	L,(HL)
	LD	H,0
	LD	D,0
	CALL	PRDECL1
	CALL	WRTRK
	CALL	VERDTRK
	LD	A,(TRACK)
	LD	HL,TRACKS
	CP	(HL)
	JR	Z,FD2EX
	CALL	PRESSESC
	CALL	STEPIN
	LD	HL,TRACK
	INC	(HL)
	CALL	NEXTDTRK
	JR	FD2

FD2EX	CALL	DRIVEOFF
	CALL	SIDEA
	CALL	DRIVEON
	CALL	HOME
	CALL	CLBUF
	LD	A,(TRACKS)
	CP	41
	JP	NZ,FD2EX80
	LD	HL,BPBFD
	LD	DE,BUFOR
	LD	BC,30
	LDIR
	XOR	A
	LD	(TRACK),A
	LD	A,1
	CALL	SVASEC
	CALL	CLBUF
	LD	HL,BUFOR
	LD	A,#FD
	LD	(HL),A
	INC	HL
	LD	A,#FF
	LD	(HL),A
	INC	HL
	LD	(HL),A
	LD	A,2
	CALL	SVASEC
	LD	A,4
	CALL	SVASEC
	CALL	CLBUF
	LD	A,3
	CALL	SVASEC
	LD	A,5
	CALL	SVASEC
	LD	A,6
	CALL	SVASEC
	LD	A,7
	CALL	SVASEC
	LD	A,8
	CALL	SVASEC
	LD	A,9
	CALL	SVASEC
	CALL	DRIVEOFF
	CALL	SIDEB
	CALL	DRIVEON
	LD	A,1
	CALL	SVASEC
	LD	A,2
	CALL	SVASEC
	LD	A,3
	CALL	SVASEC
	CALL	DRIVEOFF
	CALL	SIDEA
	JP	COMPLET

FD2EX80	LD	HL,BPBF9
	LD	DE,BUFOR
	LD	BC,30
	LDIR
	XOR	A
	LD	(TRACK),A
	LD	A,1
	CALL	SVASEC
	CALL	CLBUF
	LD	HL,BUFOR
	LD	A,#F9
	LD	(HL),A
	INC	HL
	LD	A,#FF
	LD	(HL),A
	INC	HL
	LD	(HL),A
	LD	A,2
	CALL	SVASEC
	LD	A,5
	CALL	SVASEC
	CALL	CLBUF
	LD	A,3
	CALL	SVASEC
	LD	A,4
	CALL	SVASEC
	LD	A,6
	CALL	SVASEC
	LD	A,7
	CALL	SVASEC
	LD	A,8
	CALL	SVASEC
	LD	A,9
	CALL	SVASEC
	CALL	DRIVEOFF
	CALL	SIDEB
	CALL	DRIVEON
	LD	A,1
	CALL	SVASEC
	LD	A,2
	CALL	SVASEC
	LD	A,3
	CALL	SVASEC
	LD	A,4
	CALL	SVASEC
	LD	A,5
	CALL	SVASEC
	CALL	DRIVEOFF
	CALL	SIDEA
	JP	COMPLET

BPBFC	DEFB	#EB,#34,#90;180K/1S/2D
	DEFM	"ZoonSoft
	DEFB	0,2,1,1,0,2,64,0,104,1,#FC,2,0,9,0,1,0,0,0

BPBFD	DEFB	#EB,#34,#90;360K/2S/2D
	DEFM	"ZoonSoft
	DEFB	0,2,2,1,0,2,112,0,208,2,#FD,2,0,9,0,2,0,0,0

BPBF9	DEFB	#EB,#34,#90;720K/2S/HD
	DEFM	"ZoonSoft
	DEFB	0,2,2,1,0,2,112,0,160,5,#F9,3,0,9,0,2,0,0,0

BPBF8	DEFB	#EB,#34,#90;360K/1S/HD
	DEFM	"ZoonSoft
	DEFB	0,2,2,1,0,2,112,0,208,2,#F8,2,0,9,0,1,0,0,0

SVASEC	LD	(SECTOR),A
	LD	HL,BUFOR
	LD	(MEM),HL
	CALL	SVSEC
	AND	#1C
	CALL	NZ,BADSEC
	RET

;PROCEDURA TWORZY W BUFORZE WZOR SCIEZKI DOS
DOSTRK	LD	BC,60
	LD	HL,BUFOR
	LD	DE,BUFOR+1
	LD	(HL),#4E
	LDIR
	PUSH	HL
	LD	BC,12
	LD	(HL),0
	LDIR
	LD	BC,3
	LD	(HL),#F5
	LDIR
	LD	(HL),#FE
	LDI
	LD	(HL),0
	LD	BC,3
	LDIR
	LD	(HL),2
	LDI
	LD	(HL),#F7
	LDI
	LD	(HL),#4E
	LD	BC,22
	LDIR
	LD	(HL),0
	LD	BC,12
	LDIR
	LD	(HL),#F5
	LD	BC,3
	LDIR
	LD	(HL),#FB
	LDI
	LD	(HL),#E5
	LD	BC,512
	LDIR
	LD	(HL),#F7
	LDI
	LD	(HL),#4E
	LD	BC,24
	LDIR

	POP	HL
	DEC	DE
	LD	B,10
DT1	PUSH	BC
	LD	BC,596
	LDIR
	POP	BC
	DJNZ	DT1
	LD	H,D
	LD	L,E
	INC	DE
	LD	(HL),#4E
	LD	BC,1500
	LDIR

	LD	HL,BUFOR+3+75
	LD	B,18
	LD	DE,596
	LD	A,(HL)
DT2	ADD	HL,DE
	INC	A
	LD	(HL),A
	DJNZ	DT2

	RET

;PROCEDURA ZMIENIA NUMER STRONY W NAGLOWKACH SEKTOROW
SIDEBTRK	LD	HL,BUFOR+1+76
	LD	B,19
	LD	A,1
	LD	DE,596
SBTRK	LD	(HL),A
	ADD	HL,DE
	DJNZ	SBTRK
	RET

;PROCEDURA ZMIENIA NUMER SCIEZKI W NAGLOWKACH SEKTOROW
NEXTDTRK	LD	HL,BUFOR+1+75
	LD	B,19
	LD	DE,596
NXTD	INC	(HL)
	ADD	HL,DE
	DJNZ	NXTD
	RET

VERDTRK	CALL	PRSTR
	DEFB	CR
	DEFM	"Verify track:$
	LD	A,(TRACK)
	LD	L,A
	LD	H,0
	LD	D,0
	CALL	PRDECL1
	CALL	INT
	LD	B,0
	LD	C,#C3
	LD	D,1
VDTR1	LD	HL,BUFOR+#2000
	CALL	FASTLDSEC
	AND	#1C
	CALL	NZ,BADSEC
	INC	D
	LD	A,D
	CP	10
	RET	Z
	JR	VDTR1

;FORMAT CP/M DISK
FORCPM	CALL	CLS
	LD	DE,FCMSG
	CALL	PRDE
	CALL	PRSTR
	DEFB	CR,LF,LF
	DEFM	"FORMAT DISK IN DRIVE $
	LD	A,(CPMDRIVE)
	ADD	A,"A"
	CALL	PRINT
	CALL	PRSTR
	DEFM	" ? PRESS:
	DEFB	CR,LF,LF
	DEFM	"4 - 42 TRACKS; 8 - 82 TRACKS; OTHER KEY - EXIT $
	CALL	GET
	PUSH	AF
	CP	"4"
	JR	NZ,FORC1
	LD	A,41
	LD	(TRACKS),A
	JR	FORC2
FORC1	CP	"8"
	JP	NZ,M0
	LD	A,81
	LD	(TRACKS),A
FORC2	POP	AF
	CALL	PRINT
	CALL	PRLF
	CALL	PRLF
	LD	A,(CPMDRIVE)
	LD	(DRIVE),A
	XOR	A
	LD	(TRACK),A
	CALL	SIDEA
	CALL	CPMTRK
	CALL	DRIVEON
	CALL	HOME
	BIT	6,A
	JP	NZ,PROTECT
FC1	CALL	PRSTR
	DEFB	CR
	DEFM	"Format track:$
	LD	HL,BUFOR+75+1
	LD	L,(HL)
	LD	H,0
	LD	D,0
	CALL	PRDECL1
	CALL	WRTRK
	CALL	VERCTRK
	LD	A,(TRACK)
	LD	HL,TRACKS
	CP	(HL)
	JR	Z,FCEX
	CALL	PRESSESC
	CALL	STEPIN
	LD	HL,TRACK
	INC	(HL)
	CALL	NEXTCTRK
	JR	FC1
FCEX	CALL	HOME
	LD	C,31
	CALL	5
	PUSH	HL
	POP	IY
	LD	A,(IY+13)
	LD	(TRACK),A
	CALL	SEEK
	LD	HL,BUFOR
	LD	(MEM),HL
	LD	DE,BUFOR+1
	LD	BC,256
	LD	(HL),#E5
	LDIR
	LD	DE,BUFOR
	LD	HL,SEC0DIR
	LD	BC,32
	LDIR
	XOR	A
	LD	(SECTOR),A
	CALL	SVSEC
	CALL	DRIVEOFF
	JR	VERCPM1

SEC0DIR	DEFB	#FF
	DEFM	"ZOONSOFTDIR
	DEFB	0,0,0,0
	DEFB	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0

VERCPM	CALL	CLS
	LD	DE,VCMSG
	CALL	PRDE
VERCPM1	CALL	PRSTR
	DEFB	CR,LF,LF
	DEFM	"VERIFY DISK IN DRIVE $
	LD	A,(CPMDRIVE)
	ADD	A,"A"
	CALL	PRINT
	CALL	PRSTR
	DEFM	" ? PRESS:
	DEFB	CR,LF,LF
	DEFM	"4 - 40 TRACKS; 8 - 80 TRACKS; OTHER KEY - EXIT $
	CALL	GET
	PUSH	AF
	CP	"4"
	JR	NZ,VERC1
	LD	A,39
	LD	(TRACKS),A
	JR	VERC2
VERC1	CP	"8"
	JP	NZ,M0
	LD	A,79
	LD	(TRACKS),A
VERC2	POP	AF
	CALL	PRINT
	CALL	PRLF
	CALL	PRLF
	LD	A,(CPMDRIVE)
	LD	(DRIVE),A
	XOR	A
	LD	(TRACK),A
	LD	HL,BUFOR+#2000
	LD	(MEM),HL
	CALL	SIDEA
	CALL	DRIVEON
	CALL	HOME
VC1	CALL	VERCTRK
	LD	A,(TRACK)
	LD	HL,TRACKS
	CP	(HL)
	JR	Z,VCEX
	CALL	STEPIN
	CALL	PRESSESC
	LD	HL,TRACK
	INC	(HL)
	JR	VC1
VCEX	CALL	DRIVEOFF
	JP	COMPLET

VERCTRK	CALL	PRSTR
	DEFB	CR
	DEFM	"Verify track:$
	LD	A,(TRACK)
	LD	L,A
	LD	H,0
	LD	D,0
	CALL	PRDECL1
	CALL	INT
	LD	B,0
	LD	C,#C3
	LD	D,0
VCTR1	LD	HL,BUFOR+#2000
	CALL	FASTLDSEC
	AND	#1C
	CALL	NZ,BADSEC
	INC	D
	LD	A,D
	CP	16
	RET	Z
	JR	VCTR1

FASTLDSEC	LD	A,D
	OUT	(#C2),A
	LD	A,#80
	OUT	(#C0),A
	EI
FLDS1	IN	A,(#2F)
	RLA
	JR	NC,FLDS1
	INI
	JR	FLDS1

PROTECT	CALL	DRIVEOFF
	CALL	PRSTR
	DEFB	CR,LF,LF
	DEFM	"DISK IS WRITE PROTECTED...$
	CALL	ANYKEY

BADSEC	PUSH	HL
	PUSH	DE
	PUSH	BC
	PUSH	AF
	CALL	PRSTR
	DEFM	" sector:$
	IN	A,(#C2)
	LD	L,A
	LD	H,0
	LD	D,0
	CALL	PRDECL1
	POP	AF
	BIT	4,A
	JR	NZ,BADSEC1
	CALL	PRSTR
	DEFM	" Not found!$
BADSEC1	BIT	3,A
	JR	NZ,BADSEC2
	CALL	PRSTR
	DEFM	" CRC error!$
BADSEC2	BIT	2,A
	JR	NZ,BADSEC3
	CALL	PRSTR
	DEFM	" Data lost!$
BADSEC3	CALL	PRCRLF
	CALL	PRESSESC
	POP	BC
	POP	DE
	POP	HL
	RET

;PROCEDURA TWORZY W BUFORZE WZOR SCIEZKI CP/M
CPMTRK	LD	BC,60
	LD	HL,BUFOR
	LD	DE,BUFOR+1
	LD	(HL),#4E
	LDIR
	PUSH	HL
	LD	BC,12
	LD	(HL),0
	LDIR
	LD	BC,3
	LD	(HL),#F5
	LDIR
	LD	(HL),#FE
	LDI
	LD	(HL),0
	LD	BC,3
	LDIR
	LD	(HL),1
	LDI
	LD	(HL),#F7
	LDI
	LD	(HL),#4E
	LD	BC,22
	LDIR
	LD	(HL),0
	LD	BC,12
	LDIR
	LD	(HL),#F5
	LD	BC,3
	LDIR
	LD	(HL),#FB
	LDI
	LD	(HL),#E5
	LD	BC,256
	LDIR
	LD	(HL),#F7
	LDI
	LD	(HL),#4E
	LD	BC,24
	LDIR

	POP	HL
	DEC	DE
	LD	B,17
CT1	PUSH	BC
	LD	BC,340
	LDIR
	POP	BC
	DJNZ	CT1
	LD	H,D
	LD	L,E
	INC	DE
	LD	(HL),#4E
	LD	BC,1500
	LDIR

	LD	HL,BUFOR+3+75
	LD	B,18
	LD	DE,340
	LD	A,(HL)
CT2	ADD	HL,DE
	INC	A
	LD	(HL),A
	DJNZ	CT2

	RET

;PROCEDURA ZMIENIA NUMER SCIEZKI W NAGLOWKACH SEKTOROW
NEXTCTRK	LD	HL,BUFOR+1+75
	LD	B,19
	LD	DE,340
NXT	INC	(HL)
	ADD	HL,DE
	DJNZ	NXT
	RET

;PROCEDURA CZEKA NA ZMIANE DYSKIETEK
ZMIANA	LD	A,(CPMDRIVE)
	LD	B,A
	LD	A,(DOSDRIVE)
	CP	B
	RET	NZ
	CALL	PRSTR
	DEFB	CR,LF
	DEFM	"Change disks and press any key...$
	CALL	GET
	RET

;J.W. W SPECYFICZNYCH OKOLICZNOSCIACH
CZY_NA_A	LD	A,(DOSDRIVE)
	OR	A
	RET	NZ
	LD	A,(CPMDRIVE)
	OR	A
	RET	Z
	CALL	PRSTR
	DEFB	CR,LF
	DEFM	"INSERT DOS DISK INTO DRIVE A: AND PRESS ANY KEY...
	DEFB	CR,LF,BELL,EOT
	CALL	GET
	RET

COPCPMC	CALL	CLS
	LD	DE,CCCMSG
	CALL	PRDE
	CALL	DCPM
	CALL	NAMECPM
	CALL	LOADCPM
	CALL	DESTIN
	CALL	SAVECPM
	JP	COMPLET

COPDOSD	CALL	CLS
	LD	DE,CDDMSG
	CALL	PRDE
	CALL	DDIR
	CALL	NAMEDOS
	JP	NC,NOFILE
	CALL	LDDOSF
	LD	A,(DOSDRIVE)
	PUSH	AF
	CALL	DESTIN
	LD	A,(DRIVE)
	LD	(DOSDRIVE),A
	CALL	SVDOSF
	POP	AF
	LD	(DOSDRIVE),A
	JP	COMPLET

PRINTER	LD	A,(PRON)
	OR	A
	RET	Z
	CALL	PRSTR
	DEFB	CR,LF,LF
	DEFM	"PRINTING...$
	LD	A,LIST
	LD	(PRCOM),A
	RET

PROFF	LD	A,(PRON)
	OR	A
	RET	Z
	CALL	PRCRLF
	LD	A,BELL
	CALL	PRINT
	LD	A,CONOUT
	LD	(PRCOM),A
	RET

PRONOFF	CALL	CLS
	LD	DE,POOMSG
	CALL	PRDE
	CALL	PRSTR
	DEFB	CR,LF,LF
	DEFM	"PRINTER IS NOW $
	LD	A,(PRON)
	OR	A
	JR	Z,PROO1
	CALL	PRSTR
	DEFM	"OFF$
	XOR	A
	JR	PROO2
PROO1	CALL	PRSTR
	DEFM	"ON$
	LD	A,#FF
PROO2	LD	(PRON),A
	JP	ANYKEY

,PROO1
	CALL	PRSTR
	DEFM	"OFF$
	XOR	A
	JR	PROO2
PROO1	CALL	PRSTR                                                                                                                                